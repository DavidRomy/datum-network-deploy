---

# 停止所有服务

- hosts: via
  tags:
    - via
  tasks:
    - name: stop via
      shell: ps -ef | grep "{{ deploy_dir }}/via/via -cnf {{ deploy_dir }}/via/config/via.yml" | grep -v "grep" | awk '{print $2}' | xargs -r kill -s TERM
      register: result
      changed_when: false
      failed_when: result.rc != 0
      when: enable_deploy_via|default(false)

    - name: wait until the via_port is down
      wait_for:
        host: "{{ ansible_host }}"
        port: "{{ via_port }}"
        state: stopped
        msg: "the pump port {{ via_port }} is not down"
      when: enable_deploy_via|default(false)


- hosts: carrier
  tags:
    - carrier
  tasks:
    - name: stop carrier
      shell: ps -ef | grep "{{ deploy_dir }}/carrier/carrier --config-file {{ deploy_dir }}/carrier/config/carrier.yml" | grep -v "grep" | awk '{print $2}' | xargs -r kill -s TERM
      register: result
      changed_when: false
      failed_when: result.rc != 0
      when: enable_deploy_carrier|default(false)

    - name: wait until the carrier_rpc_port is down
      wait_for:
        host: "{{ ansible_host }}"
        port: "{{ carrier_rpc_port }}"
        state: stopped
        msg: "the pump port {{ carrier_rpc_port }} is not down"
      when: enable_deploy_carrier|default(false)

- hosts: admin
  tags:
    - admin
  tasks:
    - name: stop admin
      shell: "{{ deploy_dir }}/admin/scripts/stop_admin.sh admin"
      register: result
      changed_when: false
      failed_when: result.rc != 0
      when: enable_deploy_admin|default(false)

    - name: wait until the admin_web_port is down
      wait_for:
        host: "{{ ansible_host }}"
        port: "{{ admin_web_port }}"
        state: stopped
        msg: "the pump port {{ admin_web_port }} is not down"
      when: enable_deploy_admin|default(false)

- hosts: data
  tags:
    - data
  tasks:
    - name: stop data
      shell: ps -ef | grep "{{ deploy_dir }}/miniconda/envs/python375/bin/python -u -m metis.data_svc.main {{ deploy_dir }}/data/config/data.yml" | grep -v "grep" | awk '{print $2}' | xargs -r kill -s TERM
      register: result
      changed_when: false
      failed_when: result.rc != 0
      when: enable_deploy_data|default(false)

    - name: wait until the data port is down
      wait_for:
        host: "{{ ansible_host }}"
        port: "{{ data_port_self }}"
        state: stopped
        msg: "the pump port {{ data_port_self }} is not down"
      when: enable_deploy_data|default(false)

- hosts: compute
  tags:
    - compute
  tasks:
    - name: stop compute
      shell: ps -ef | grep "{{ deploy_dir }}/miniconda/envs/python375/bin/python -u -m metis.compute_svc.main {{ deploy_dir }}/compute/config/compute.yml" | grep -v "grep" | awk '{print $2}' | xargs -r kill -s TERM
      register: result
      changed_when: false
      failed_when: result.rc != 0
      when: enable_deploy_compute|default(false)

    - name: wait until the compute port is down
      wait_for:
        host: "{{ ansible_host }}"
        port: "{{ compute_port_self }}"
        state: stopped
        msg: "the pump port {{ compute_port_self }} is not down"
      when: enable_deploy_compute|default(false)

- name: stop consul
  hosts: consul
  tags:
    - consul
  tasks:
    - name: stop consul
      shell: ps -ef | grep "{{ deploy_dir }}/consul/consul agent -config-file {{ deploy_dir }}/consul/config/consul.json" | grep -v "grep" | awk '{print $2}' | xargs -r kill -s TERM
      register: result
      changed_when: false
      failed_when: result.rc != 0
      when: enable_deploy_consul|default(false)

    - name: wait until the consul http port is down
      wait_for:
        host: "{{ ansible_host }}"
        port: "{{ consul_http_port_self | trim }}"
        state: stopped
        msg: "the pump port {{ consul_http_port_self | trim }} is not down"
      when: enable_deploy_consul|default(false)

- hosts: storage
  tags:
    - storage
  tasks:
    - name: stop storage
      shell: ps -ef | grep "java -jar {{ deploy_dir }}/storage/storage.jar --spring.profiles.active=storage" | grep -v "grep" | awk '{print $2}' | xargs -r kill -s TERM
      register: result
      changed_when: false
      failed_when: result.rc != 0
      when: enable_deploy_storage|default(false)

    - name: wait until the storage_port is down
      wait_for:
        host: "{{ ansible_host }}"
        port: "{{ storage_port }}"
        state: stopped
        msg: "the pump port {{ storage_port }} is not down"
      when: enable_deploy_storage|default(false)

# - hosts: scan
#   tags:
#     - scan
#   tasks:
#     - name: start scan
#       shell: ps -ef | grep "java -jar {{ deploy_dir }}/scan/scan.jar" | awk '{print $1,$2}' | kill -9

#     - name: wait until the scan_web_port is down
#       wait_for:
#         host: "{{ ansible_host }}"
#         port: "{{ scan_web_port }}"
#         state: stopped
#         msg: "the pump port {{ scan_web_port }} is not down"
