---
# 启动所有服务

- name: start consul
  hosts: consul
  gather_facts: True
  tags:
    - consul_servers
  tasks:
    - name: start consul
      shell: "nohup {{ deploy_dir }}/consul/consul agent -config-file {{ deploy_dir }}/consul/config/consul.json &"
      register: result
      changed_when: false
      failed_when: result.rc != 0
      when: enable_deploy_consul|default(false)

    - name: Debug consul_http_port_self information
      debug:
        var: consul_http_port_self | trim
      when: enable_deploy_consul|default(false)

    - name: wait until the consul http port is up
      wait_for:
        host: "{{ ansible_host }}"
        port:  "{{consul_http_port_self | trim}}"
        state: started
        msg: "the node_exporter port {{ consul_http_port_self | trim }} is not up"
      when: enable_deploy_consul|default(false)

    - name: Other nodes join the cluster
      shell: "{{ deploy_dir }}/consul/consul join --http-addr {{ansible_host}}:{{consul_http_port_self | trim}} {{consul_leader}}:{{consul_leader_serf_lan_port}}"
      when: ansible_host != consul_leader and groups['consul'] | length > 1
      register: result
      changed_when: false
      failed_when: result.rc != 0

    - name: Set via external network address
      uri: 
        url: http://{{consul_leader}}:{{consul_leader_port}}/v1/kv/metis/via_ip_port
        method: PUT
        body: "{{via_ip}}_{{via_port}}" 
        when: "ansible_host == consul_leader"

    - name: Set data center address
      uri: 
        url: http://{{consul_leader}}:{{consul_leader_port}}/v1/kv/metis/dataCenter_ip_port
        method: PUT
        body: "{{storage_ip}}_{{storage_port}}" 
        when: "ansible_host == consul_leader"

- hosts: via
  tags:
    - via_servers
  tasks:
    - name: start via
      shell: "nohup {{ deploy_dir }}/via/via -cnf {{ deploy_dir }}/via/config/via.yml &"
      register: result
      changed_when: false
      failed_when: result.rc != 0
      when: enable_deploy_via|default(false)
      
    - name: wait until the via_port port is up
      wait_for:
        host: "{{ ansible_host }}"
        port: "{{ via_port }}"
        state: started
        msg: "the node_exporter port {{ via_port }} is not up"
      when: enable_deploy_via|default(false)


- hosts: carrier
  tags:
    - carrier_servers
  tasks:
    - name: start carrier
      shell: "nohup {{ deploy_dir }}/carrier/carrier --config-file {{ deploy_dir }}/carrier/config/carrier.yml > {{ deploy_dir }}/carrier/carrier.log 2>&1 &"
      register: result
      changed_when: false
      failed_when: result.rc != 0
      when: enable_deploy_carrier|default(false)

    - name: wait until the carrier_rpc_port port is up
      wait_for:
        host: "{{ ansible_host }}"
        port: "{{ carrier_rpc_port }}"
        state: started
        msg: "the node_exporter port {{ carrier_rpc_port }} is not up"
      when: enable_deploy_carrier|default(false)

- hosts: admin
  tags:
    - admin_servers
  tasks:
    - name: start admin
      shell: " nohup java -jar {{ deploy_dir }}/admin/admin.jar --spring.profiles.active=admin &"
      args:
        chdir: "{{ deploy_dir }}/admin"
      register: result
      changed_when: false
      failed_when: result.rc != 0
      when: enable_deploy_admin|default(false)
    
    - name: wait until the admin_web_port port is up
      wait_for:
        host: "{{ ansible_host }}"
        port: "{{ admin_web_port }}"
        state: started
        msg: "the node_exporter port {{ admin_web_port }} is not up"
      when: enable_deploy_admin|default(false)

- name: start data
  hosts: data
  tags:
    - data_servers
  tasks:
    - name: start data
      shell: "nohup {{ deploy_dir }}/data/start_v3_service.sh {{ deploy_dir }}/data/config/data.yml data {{deploy_dir}}/miniconda/envs/python375/bin/python &"
      register: result
      changed_when: false
      failed_when: result.rc != 0
      when: enable_deploy_data|default(false)

    - name: wait until the data port port is up
      wait_for:
        host: "{{ ansible_host }}"
        port: "{{ data_port_self }}"
        state: started
        msg: "the node_exporter port {{ data_port_self }} is not up"
      when: enable_deploy_data|default(false)

- name: start compute
  hosts: compute
  tags:
    - compute_servers
  tasks:
    - name: start compute
      shell: "nohup {{ deploy_dir }}/compute/start_v3_service.sh {{ deploy_dir }}/compute/config/compute.yml compute {{deploy_dir}}/miniconda/envs/python375/bin/python &"
      register: result
      changed_when: false
      failed_when: result.rc != 0
      when: enable_deploy_compute|default(false)

    - name: wait until the compute port port is up
      wait_for:
        host: "{{ ansible_host }}"
        port: "{{ compute_port_self }}"
        state: started
        msg: "the node_exporter port {{ compute_port_self }} is not up"
      when: enable_deploy_compute|default(false)


- hosts: storage
  tags:
    - storage_servers
  tasks:
    - name: start storage
      shell: "nohup java -jar {{ deploy_dir }}/storage/storage.jar --spring.profiles.active=storage &"
      args:
        chdir: "{{ deploy_dir }}/storage"
      register: result
      changed_when: false
      failed_when: result.rc != 0
      when: enable_deploy_storage|default(false)

    - name: wait until the storage_port port is up
      wait_for:
        host: "{{ ansible_host }}"
        port: "{{ storage_port }}"
        state: started
        msg: "the node_exporter port {{ storage_port }} is not up"
      when: enable_deploy_storage|default(false)

# - hosts: scan
#   tags:
#     - scan
#   tasks:
#     - name: start scan
#       shell: "nohup java -jar {{ deploy_dir }}/scan/scan.jar --spring.profiles.active={{ deploy_dir }}/scan/config/scan.yml &"

#     - name: wait until the scan_web_port port is up
#       wait_for:
#         host: "{{ ansible_host }}"
#         port: "{{ scan_web_port }}"
#         state: started
#         msg: "the node_exporter port {{ scan_web_port }} is not up"