---

- name: create deploy directories
  file: path={{ item }} state=directory mode=0755
  with_items:
  - "{{ deploy_dir }}/scan"
  - "{{ deploy_dir }}/scan/conf"
  - "{{ deploy_dir }}/scan/cert"
  - "{{ deploy_dir }}/scan/cert/web"
  - "{{ deploy_dir }}/scan/log"
  - "{{ deploy_dir }}/scan/network"

- name: "Deploy certificates"
  copy:
    src: "{{ scan_cert_dir }}/{{ item }}"
    dest: "{{ deploy_dir }}/scan/cert/{{ item }}"
    mode: 0600
    backup: yes
  with_items:
    - server.pem 
    - server.key
  when: sync_certs|default(false)

- name: "Deploy web certificates"
  copy:
    src: "{{ scan_cert_dir }}/web/{{ item }}"
    dest: "{{ deploy_dir }}/scan/cert/web/{{ item }}"
    mode: 0600
    backup: yes
  with_items:
    - server.pem 
    - server.key
  when: sync_certs|default(false)

- name: "copy configuration file"
  copy:
    src: "{{ playbook_dir }}/conf/scan.yml"
    dest: "{{ deploy_dir }}/scan/conf/scan.yml"
    mode: 0600
    backup: yes

- name: "copy scan jar package"
  copy:
    src: "{{ downloads_dir }}/scan.jar"
    dest: "{{ deploy_dir }}/scan/scan"
    mode: 0775
    backup: yes

- name: copy and extract scan.tar.gz
  unarchive:
    src: "{{ downloads_dir }}/scan.tar.gz"
    dest: "{{ deploy_dir }}/scan/network"

# 安装 mysql
# - name: Update and upgrade apt packages
#   shell: sudo apt-get update 

- name: Install the MySQL packages
  become: true
  apt: name={{ item }} state=installed update_cache=yes
  with_items:
    - mysql-server
    - mysql-client
    - python-mysqldb

- name: Start the MySQL service
  service: 
    name: mysql 
    state: started
    enabled: true

# 设置用户名密码
# - name: set mysql user
#   mysql_user:
#   user: root
#   password: 123456
#   update_password: always

# 安装 nginx
- name: Ansible apt install nginx
  become: true
  apt:
    name: nginx
    state: present

- name: "copy nginx config file"
  become: true
  copy:
    src: "{{ scan_cert_dir }}/web/metis-scan.platon.network.conf"
    dest: "/etc/nginx/conf.d/metis-scan.platon.network.conf"
    mode: 0600
    backup: yes

- name: NGINX | Starting NGINXme  
  service:
    name: nginx
    state: started

# java 环境
- name: Ansible apt install openjdk-8-jdk
  become: true
  apt:
    name: openjdk-8-jdk
    state: present