---

- name: create deploy directories
  file: path={{ item }} state=directory mode=0755
  with_items:
  - "{{ deploy_dir }}/storage"
  - "{{ deploy_dir }}/storage/sql"
  - "{{ deploy_dir }}/storage/config"
  - "{{ deploy_dir }}/storage/cert"
  - "{{ deploy_dir }}/storage/log"

- name: "Deploy certificates"
  copy:
    src: "{{ storage_cert_dir }}/{{ item }}"
    dest: "{{ deploy_dir }}/storage/cert/{{ item }}"
    mode: 0600
    backup: yes
  with_items:
    - server.pem 
    - server.key

- name: "copy configuration file"
  template:
    src: "storage.yml.j2"
    dest: "{{ deploy_dir }}/storage/config/storage.yml"
    mode: 0600
    backup: yes

- name: "Copy database initialization script"
  copy:
    src: "{{ playbook_dir }}/config/storage.sql"
    dest: "{{ deploy_dir }}/storage/sql/storage.sql"
    mode: 0600
    backup: yes

- name: "copy storage jar package"
  copy:
    src: "{{ downloads_dir }}/storage.jar"
    dest: "{{ deploy_dir }}/storage/storage.jar"
    mode: 0775
    backup: yes

# 安装 mysql
- name: Update and upgrade apt packages
  become: true
  apt:
    upgrade: yes
    update_cache: yes
    force_apt_get: yes
    cache_valid_time: 86400 #One day

- name: Install the MySQL packages
  become: true
  apt: name={{ item }} state=installed update_cache=yes
  with_items:
    - mysql-server
    - mysql-client
    - python-mysqldb
    - libmysqlclient-dev
    - python-mysqldb

- name: "Installing mysql pip dependencies"
  pip:
    name: "{{ item }}"
    state: present
  with_items:
    - pymysql
    - mysqlclient

- name: Start the MySQL service
  service: 
    name: mysql 
    state: started
    enabled: true

# 修改mysql绑定地址
- name: Modify mysql bind address
  become: yes
  lineinfile:
    path: /etc/mysql/mysql.conf.d/mysqld.cnf
    regexp: "^bind-address"
    line: "bind-address   = 0.0.0.0"

- name: restart the MySQL service
  become: true
  service:
    name: mysql
    state: restarted

# 获取系统默认给我们分配的用户名和密码
- name: Get the system default mysql username
  become: true
  shell: awk -v FS="=" '{print $1,$2}' /etc/mysql/debian.cnf | awk -F" *" '$1=="user" {print $2}' | head -n +1
  register: default_name_str
  failed_when: false
  changed_when: false

- name: set default_name facts
  set_fact:
    default_name: "{{ default_name_str.stdout | trim }}"

- name: Show default_name info 
  debug: 
    msg: default_name {{ default_name }}

- name: Get the system default mysql user password
  become: true
  shell: awk -v FS="=" '{print $1,$2}' /etc/mysql/debian.cnf | awk -F" *" '$1=="password" {print $2}' | head -n +1
  register: default_password_str
  failed_when: false
  changed_when: false

- name: set default_password facts
  set_fact:
    default_password: "{{ default_password_str.stdout | trim }}"

- name: Show default_password info 
  debug:
    msg: default_password {{default_password }}

# 更改 root 密码
- name: setting default root password
  mysql_user:
    login_user: "{{ default_name }}"
    login_password: "{{ default_password }}"
    name: root
    password: "{{ mysql_root_password }}"
    priv: "*.*:ALL,GRANT"

# 创建用户
- name: Create database user
  mysql_user:
    login_user: "{{ default_name }}"
    login_password: "{{ default_password }}"
    name: "{{ storage_user }}"
    password: "{{ storage_password }}"
    priv: '*.*:ALL'
    host: "%"
    state: present

# 初始化数据库
- name: Initialize database, create database and table
  shell: mysql -u{{ storage_user }} -p{{ storage_password }} < {{ deploy_dir }}/storage/sql/storage.sql

# java 环境
- name: Ansible apt install openjdk-8-jdk
  become: true
  apt:
    name: openjdk-8-jdk
    state: present